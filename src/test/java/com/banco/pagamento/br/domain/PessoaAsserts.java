package com.banco.pagamento.br.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PessoaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPessoaAllPropertiesEquals(Pessoa expected, Pessoa actual) {
        assertPessoaAutoGeneratedPropertiesEquals(expected, actual);
        assertPessoaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPessoaAllUpdatablePropertiesEquals(Pessoa expected, Pessoa actual) {
        assertPessoaUpdatableFieldsEquals(expected, actual);
        assertPessoaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPessoaAutoGeneratedPropertiesEquals(Pessoa expected, Pessoa actual) {
        assertThat(actual)
            .as("Verify Pessoa auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(expected.getLastModifiedBy()))
            .satisfies(a -> assertThat(a.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(expected.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPessoaUpdatableFieldsEquals(Pessoa expected, Pessoa actual) {
        assertThat(actual)
            .as("Verify Pessoa relevant properties")
            .satisfies(a -> assertThat(a.getFoto()).as("check foto").isEqualTo(expected.getFoto()))
            .satisfies(a -> assertThat(a.getFotoContentType()).as("check foto contenty type").isEqualTo(expected.getFotoContentType()))
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a -> assertThat(a.getDtNascimento()).as("check dtNascimento").isEqualTo(expected.getDtNascimento()))
            .satisfies(a -> assertThat(a.getCpf()).as("check cpf").isEqualTo(expected.getCpf()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPessoaUpdatableRelationshipsEquals(Pessoa expected, Pessoa actual) {
        // empty method
    }
}
